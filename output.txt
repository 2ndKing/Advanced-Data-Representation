Test (line 16): oct_to_bin("725") -> Expected: "111010101", Got: "111010101" [PASS]
Test (line 17): oct_to_bin("345") -> Expected: "011100101", Got: "011100101" [PASS]
Test (line 18): oct_to_bin("777") -> Expected: "111111111", Got: "111111111" [PASS]
Test (line 21): oct_to_bin("0") -> Expected: "000", Got: "000" [PASS]
Test (line 22): oct_to_bin("1") -> Expected: "001", Got: "001" [PASS]
Test (line 23): oct_to_bin("7") -> Expected: "111", Got: "111" [PASS]
Test (line 26): oct_to_bin("10") -> Expected: "001000", Got: "001000" [PASS]
Test (line 27): oct_to_bin("100") -> Expected: "001000000", Got: "001000000" [PASS]
Test (line 28): oct_to_bin("377") -> Expected: "011111111", Got: "011111111" [PASS]
Test (line 35): oct_to_hex("345") -> Expected: "E5", Got: "E5" [PASS]
Test (line 36): oct_to_hex("777") -> Expected: "1FF", Got: "1FF" [PASS]
Test (line 37): oct_to_hex("100") -> Expected: "40", Got: "40" [PASS]
Test (line 40): oct_to_hex("0") -> Expected: "0", Got: "0" [PASS]
Test (line 41): oct_to_hex("1") -> Expected: "1", Got: "1" [PASS]
Test (line 42): oct_to_hex("7") -> Expected: "7", Got: "7" [PASS]
Test (line 45): oct_to_hex("1234") -> Expected: "29C", Got: "29C" [PASS]
Test (line 46): oct_to_hex("7654") -> Expected: "FAC", Got: "FAC" [PASS]
Test (line 53): hex_to_bin("A3") -> Expected: "10100011", Got: "10100011" [PASS]
Test (line 54): hex_to_bin("FF") -> Expected: "11111111", Got: "11111111" [PASS]
Test (line 55): hex_to_bin("1A") -> Expected: "00011010", Got: "00011010" [PASS]
Test (line 58): hex_to_bin("a3") -> Expected: "10100011", Got: "10100011" [PASS]
Test (line 59): hex_to_bin("Ff") -> Expected: "11111111", Got: "11111111" [PASS]
Test (line 60): hex_to_bin("aC") -> Expected: "10101100", Got: "10101100" [PASS]
Test (line 63): hex_to_bin("0") -> Expected: "0000", Got: "0000" [PASS]
Test (line 64): hex_to_bin("1") -> Expected: "0001", Got: "0001" [PASS]
Test (line 65): hex_to_bin("F") -> Expected: "1111", Got: "1111" [PASS]
Test (line 68): hex_to_bin("CAFE") -> Expected: "1100101011111110", Got: "1100101011111110" [PASS]
Test (line 69): hex_to_bin("1234") -> Expected: "0001001000110100", Got: "0001001000110100" [PASS]
Test (line 76): to_sign_magnitude(5) -> Expected: "00000000000000000000000000000101", Got: "00000000000000000000000000000101" [PASS]
Test (line 77): to_sign_magnitude(1) -> Expected: "00000000000000000000000000000001", Got: "00000000000000000000000000000001" [PASS]
Test (line 78): to_sign_magnitude(255) -> Expected: "00000000000000000000000011111111", Got: "00000000000000000000000011111111" [PASS]
Test (line 81): to_sign_magnitude(-5) -> Expected: "10000000000000000000000000000101", Got: "10000000000000000000000000000101" [PASS]
Test (line 82): to_sign_magnitude(-1) -> Expected: "10000000000000000000000000000001", Got: "10000000000000000000000000000001" [PASS]
Test (line 83): to_sign_magnitude(-255) -> Expected: "10000000000000000000000011111111", Got: "10000000000000000000000011111111" [PASS]
Test (line 86): to_sign_magnitude(0) -> Expected: "00000000000000000000000000000000", Got: "00000000000000000000000000000000" [PASS]
Test (line 93): to_ones_complement(5) -> Expected: "00000000000000000000000000000101", Got: "00000000000000000000000000000101" [PASS]
Test (line 94): to_ones_complement(1) -> Expected: "00000000000000000000000000000001", Got: "00000000000000000000000000000001" [PASS]
Test (line 95): to_ones_complement(255) -> Expected: "00000000000000000000000011111111", Got: "00000000000000000000000011111111" [PASS]
Test (line 98): to_ones_complement(-5) -> Expected: "11111111111111111111111111111010", Got: "11111111111111111111111111111010" [PASS]
Test (line 99): to_ones_complement(-1) -> Expected: "11111111111111111111111111111110", Got: "11111111111111111111111111111110" [PASS]
Test (line 100): to_ones_complement(-255) -> Expected: "11111111111111111111111100000000", Got: "11111111111111111111111100000000" [PASS]
Test (line 103): to_ones_complement(0) -> Expected: "00000000000000000000000000000000", Got: "00000000000000000000000000000000" [PASS]
Test (line 110): to_twos_complement(5) -> Expected: "00000000000000000000000000000101", Got: "00000000000000000000000000000101" [PASS]
Test (line 111): to_twos_complement(1) -> Expected: "00000000000000000000000000000001", Got: "00000000000000000000000000000001" [PASS]
Test (line 112): to_twos_complement(255) -> Expected: "00000000000000000000000011111111", Got: "00000000000000000000000011111111" [PASS]
Test (line 115): to_twos_complement(-5) -> Expected: "11111111111111111111111111111011", Got: "11111111111111111111111111111011" [PASS]
Test (line 116): to_twos_complement(-1) -> Expected: "11111111111111111111111111111111", Got: "11111111111111111111111111111111" [PASS]
Test (line 117): to_twos_complement(-255) -> Expected: "11111111111111111111111100000001", Got: "11111111111111111111111100000001" [PASS]
Test (line 120): to_twos_complement(0) -> Expected: "00000000000000000000000000000000", Got: "00000000000000000000000000000000" [PASS]
Test (line 123): to_twos_complement(2147483647) -> Expected: "01111111111111111111111111111111", Got: "01111111111111111111111111111111" [PASS]
Test (line 124): to_twos_complement(-2147483648) -> Expected: "10000000000000000000000000000000", Got: "10000000000000000000000000000000" [PASS]

Summary: 51/51 tests passed
